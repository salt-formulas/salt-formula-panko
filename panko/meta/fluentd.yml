{%- from "panko/map.jinja" import server with context %}
{%- if pillar.get('fluentd', {}).get('agent', {}).get('enabled', False) %}
{%- set positiondb = pillar.fluentd.agent.dir.positiondb %}
{%- set apache_wsgi = server.get('enabled', False) %}
agent:
  config:
    label:
      forward_input:
        input:
          generic_forward_input:
            type: forward
            bind: 0.0.0.0
            port: 24224
        match:
          route_openstack_panko:
            tag: openstack.panko.**
            type: relabel
            label: openstack_panko
      openstack_panko_wsgi:
        input:
          panko_api_wsgi_in_tail:
            type: tail
            path:
              - '/var/log/apache2/panko.access.log'
              - '/var/log/apache2/panko.error.log'
            tag: openstack.panko
            pos_file: {{ positiondb }}/panko.wsgi.pos
            parser:
              type: regexp
              time_key: Timestamp
              time_format: '%d/%b/%Y:%H:%M:%S %z'
              keep_time_key: false
              # Apache format: https://regex101.com/r/WeCT7s/5
              format: '/(?<hostname>[\w\.\-]+)\:(?<port>\d+)\s(?<http_client_ip_address>[\d\.]+)\s\-\s\-\s\[(?<Timestamp>.*)\]\s(?<Payload>\"(?<http_method>[A-Z]+)\s(?<http_url>\S+)\s(?<http_version>[.\/\dHTFSP]+)\"\s(?<http_status>\d{3})\s(?<http_response_time>\d+)\s(?<http_response_size>\d+)\s\"(?<http_referer>.*)\"\s\"(?<user_agent>.*)\")/'
        filter:
          add_panko_wsgi_record_fields:
            tag: openstack.panko
            type: record_transformer
            enable_ruby: true
            record:
              - name: Severity
                value: 6
              - name: severity_label
                value: INFO
              - name: programname
                value: panko-wsgi
              - name: http_response_time
                value: ${ record['http_response_time'].to_i/10**6.to_f }
        match:
          send_to_default:
            tag: openstack.panko
            type: copy
            store:
              - type: relabel
                label: default_output
              - type: rewrite_tag_filter
                rule:
                  - name: severity_label
                    regexp: '.'
                    result: metric.panko_log_messages
              - type: rewrite_tag_filter
                rule:
                  - name: http_status
                    regexp: '.'
                    result: metric.panko_openstack_http_response
          push_to_metric:
            tag: 'metric.**'
            type: relabel
            label: default_metric
{% endif %}
